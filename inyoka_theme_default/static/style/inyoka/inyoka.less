/**
 * style.inyoka.inyoka
 * ~~~~~~~~~~~~~~~~~~~
 *
 * Main less-file. All component-styles are imported and global ones defined.
 *
 * :copyright: (c) 2013-2015 by the Inyoka Team, see AUTHORS for more details.
 * :license: BSD, see LICENSE for more details.
 */

@import "variables.less";
@import (reference) "mixins.less";

@import "planet.less";
@import "icons.less";
@import "ikhaya.less";
@import "wiki.less";
@import "portal.less";
@import "forum.less";

html, body {
  height: 100%;
}

.breadcrumb {
  &:extend(.breadcrumb);

  & > li {
    &:extend(.breadcrumb > li);

    + li:before {
      &:extend(.breadcrumb > li + li:before);
    }

    &:last-child, &:last-child a {
      &:extend(.breadcrumb > .active);
    }
  }
}

.button-group {
  &:extend(.btn-group);

  > .btn {
    &:extend(.btn-group > .btn);
    &:extend(.btn-group-sm > .btn);

    &:hover, &:active, &.active {
      &:extend(.btn-group > .btn:hover);
    }
    &:focus {
      &:extend(.btn-group > .btn:focus);
    }
  }
}

.collapse {
  &:extend(.collapse);

  &.in {
    &:extend(.collapse.in);
  }
}
.collapsing {
  &:extend(.collapsing);
}

.hidden-info {
  &:extend(.bg-info);
}

.message-error, .warning_important {
  &:extend(.alert);
  &:extend(.alert-danger);
}

.message-debug {
  &:extend(.alert);
  &:extend(.alert-info);
}

.message-success {
  &:extend(.alert);
  &:extend(.alert-success);
}

.message-warning {
  &:extend(.alert);
  &:extend(.alert-warning);
}

.message-info {
  &:extend(.alert);
  &:extend(.alert-info);
}

.pagination {
  &:extend(.pagination);

  & > li {
    &:extend(.pagination > li);

    & > a, & > span {
      &:extend(.pagination > li > a);

      &:hover, &:focus {
        &:extend(.pagination > li > a:hover);
      }
    }
    &.active {
      & > a, & > span {
        &, &:hover , &:focus {
          &:extend(.pagination > .active > a);
        }
      }
    }
    &.disabled {
      & > a, & > span {
        &, &:hover , &:focus {
          &:extend(.pagination > .disabled > a);
        }
      }
    }
  }
}

.sidebar {
  &:extend(.panel);
  &:extend(.panel-default);

  &-danger {
    &:extend(.panel-danger);

    .sidebar-heading {
      &:extend(.panel-heading);
      &:extend(.panel-danger > .panel-heading);

      & > h1 {
        &:extend(.panel-title);
      }
    }
  }

  &-heading {
    &:extend(.panel-heading);
    &:extend(.panel-default > .panel-heading);

    & > h1 {
      &:extend(.panel-title);
    }
  }

  & > ul {
    &:extend(.list-group);
    &:extend(.panel > .list-group);
  }

  &-item {
    &:extend(.list-group-item);
    &:extend(.panel > .list-group .list-group-item);

    &:first-child {
      &:extend(.panel > .list-group:first-child .list-group-item:first-child);
    }

    &:last-child {
      &:extend(.list-group-item:last-child);
      &:extend(.panel > .list-group:last-child .list-group-item:last-child);
    }
  }
}

.staff-button {
  &:extend(.btn);
  &:extend(.btn-sm);
  &:extend(.btn-danger);
  &:extend(.btn-group > .btn);

  margin-top: 0;

  &:focus {
    &:extend(.dropdown-toggle:focus);
  }

  &-menu {
    &:extend(.dropdown-menu);
    &:extend(.pull-right > .dropdown-menu);

    & > li > a {
      &:extend(.dropdown-menu > li > a);

      &:focus, &:hover {
        &:extend(.dropdown-menu > li > a:focus);
      }
    }
  }
}
.open {
  > .staff-button-menu {
    &:extend(.open > .dropdown-menu);
  }
}

a.button {
  &:extend(.btn);
  &:extend(.btn-primary);
}

.button, button, input[type="button"], input[type="submit"] {
  &:extend(.btn);
  &:extend(.btn-primary);
  margin-top: 10px;

  &.button-delete {
    &:extend(.btn-danger);
  }

  &.button-cancel, &[name="cancel"] {
    &:extend(.btn-default);
  }
}

.sidebar form button[type="submit"] {
    &:extend(a);
    &:hover, &:focus {
      &:extend(a:hover, a:focus);
    }

    border: none;
    padding:0;
    margin: 0;
}

input[type="text"], input[type="email"], input[type="password"], select {
  &:extend(.form-control);
  .form-control-focus();
}

textarea {
  &:extend(.form-control);
  .form-control-focus();

  height: auto;
  min-height: 100px;
  max-height: 250px;
}

.header {
  &:extend(.navbar);
  &:extend(.navbar-inverse);

  &-brand {
    &:extend(.navbar-brand);
    &:extend(.navbar-inverse .navbar-brand);
    &:extend(.navbar > .container .navbar-brand);

    &:hover {
      &:extend(.navbar-brand:hover);
      &:extend(.navbar-inverse .navbar-brand:hover);
    }
    &:focus {
      &:extend(.navbar-brand:focus);
      &:extend(.navbar-inverse .navbar-brand:focus);
    }
  }

  &-collapsed {
    &:extend(.container > .navbar-header);
  }

  &-collapsing {
    &:extend(.collapse);
    &:extend(.navbar-collapse);
    &:extend(.navbar-collapse.collapse);
    &:extend(.container > .navbar-collapse);
    &:extend(.navbar-inverse .navbar-collapse);
  }

  &-toggle {
    &:extend(.navbar-toggle);
    &:extend(.navbar-inverse .navbar-toggle);
  }

  ul {
    &:extend(.nav);
    &:extend(.navbar-nav);

    @media (max-width: @screen-sm-min) {
      clear: both;
    }

    & > li {
      &:extend(.nav > li);
      &:extend(.navbar-nav > li);

      &.active > a {
        &:extend(.navbar-inverse .navbar-nav > .active > a);

        &:hover {
          &:extend(.navbar-inverse .navbar-nav > .active > a:hover);
        }
      }
      & > a {
        &:extend(.nav > li > a);
        &:extend(.navbar-nav > li > a);
        &:extend(.navbar-inverse .navbar-link);
        &:extend(.navbar-inverse .nav > li > a);
        &:extend(.navbar-inverse .navbar-nav > li > a);

        &:hover {
          &:extend(.nav > li > a:hover);
          &:extend(.navbar-inverse .navbar-link:hover);
          &:extend(.navbar-inverse .navbar-nav > li > a:hover);
        }
      }
    }
  }
  &-right {
    &:extend(.navbar-right);

    &:last-child {
      &:extend(.navbar-nav.navbar-right:last-child);
    }
  }
}

.content {
  @correction: 2px; /* prevents scrolling; needed because of approx. @line-height-computed (see bootstrap/variables.less, line 62)
                       and min-height: 1px of .col-sm-3 for the sidebar */
  @margin_sum: @header-height + @header-margin + @breadcrumb-height + @correction;

  min-height: calc(~'100% - @{margin_sum}');
  margin-bottom: @footer-height * -1;

  padding-bottom: 5px;

    &:after {
      content: "";
      display: block;
      height: @footer-height;
  }
}

.footer {
  &:extend(.navbar);
  &:extend(.navbar-inverse);

  margin: 0;
  height: @footer-height;

  &-left, &-center, &-right {
    width: 33.3%;
    padding: 0 10px;
    float: left;
    &:extend(.navbar-inverse .navbar-text);
  }
  &-center {
    text-align: center;
  }
  &-right {
    text-align: right;
  }
}
